// Code generated by goctl. DO NOT EDIT.
// Source: auth.proto

package token

import (
	"context"

	"github.com/superyyk/mayi_rpc/auth/rpc/types/auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Area            = auth.Area
	GetResponse     = auth.GetResponse
	GetTokenRequest = auth.GetTokenRequest
	TokenRequest    = auth.TokenRequest
	TokenResponse   = auth.TokenResponse

	Token interface {
		GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetResponse, error)
		VerifyToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
	}

	defaultToken struct {
		cli zrpc.Client
	}
)

func NewToken(cli zrpc.Client) Token {
	return &defaultToken{
		cli: cli,
	}
}

func (m *defaultToken) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	client := auth.NewTokenClient(m.cli.Conn())
	return client.GetToken(ctx, in, opts...)
}

func (m *defaultToken) VerifyToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	client := auth.NewTokenClient(m.cli.Conn())
	return client.VerifyToken(ctx, in, opts...)
}
